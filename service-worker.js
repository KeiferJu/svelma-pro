!function(){"use strict";const e=["client/chunk.890edef0.js","client/index.dbdbd652.js","client/chunk.0fbbf14e.js","client/chunk.03d763cb.js","client/chunk.e7370317.js","client/chunk.3401b2cf.js","client/pagination.19ebd5e7.js","client/carousel.f0364156.js","client/timepicker.ba63c0d3.js","client/datepicker.c4a6587a.js","client/chunk.0d91a229.js","client/collapse.81e617c4.js","client/snackbar.08fa2756.js","client/notification.293f82e3.js","client/message.028f7236.js","client/progress.58097ecb.js","client/layout.8baa7caf.js","client/dialog.688057a5.js","client/modal.efb38c95.js","client/switch.5495ea4d.js","client/toast.1631b842.js","client/button.d8e52df8.js","client/icon.7a7a1dce.js","client/client.b7fff50f.js","client/about.11e7daaf.js","client/intro.194f5361.js","client/input.2c0f63f2.js","client/index.766571b7.js","client/field.ff4a8231.js","client/nav.ef37e86c.js","client/tabs.dfc22d71.js","client/[slug].1981a330.js","client/table.4cee0dc2.js","client/index.5f86f78e.js","client/hero.ff6514e8.js","client/media.f1f77bee.js","client/tiles.cc1f8ebf.js","client/chunk.51d7e463.js"].concat(["service-worker-index.html","favicon.ico","favicon.png","global.css","great-success.png","logo-192.png","logo-512.png","manifest.json","svelma-logo-ico.png","svelma-logo.png","svelma-logo.svg"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1589264963537").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1589264963537"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const c=new URL(e.request.url);c.protocol.startsWith("http")&&(c.hostname===self.location.hostname&&c.port!==self.location.port||(c.host===self.location.host&&t.has(c.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1589264963537").then(async t=>{try{const c=await fetch(e.request);return t.put(e.request,c.clone()),c}catch(c){const n=await t.match(e.request);if(n)return n;throw c}}))))})}();
