!function(){"use strict";const e=["client/chunk.890edef0.js","client/index.ec5d05d8.js","client/chunk.0fbbf14e.js","client/chunk.e7370317.js","client/chunk.729e3e71.js","client/chunk.bdabfdac.js","client/pagination.116969f7.js","client/carousel.34b06e95.js","client/timepicker.05a92a78.js","client/datepicker.97e60f76.js","client/chunk.2412ccf0.js","client/collapse.6d8e31df.js","client/snackbar.eaed845e.js","client/progress.95c1ed49.js","client/message.e471ca54.js","client/notification.69256905.js","client/layout.9ce7a6c3.js","client/dialog.d05b80ef.js","client/modal.8a69da24.js","client/switch.58b23917.js","client/button.079165ac.js","client/icon.6f84b6c5.js","client/toast.7c7649df.js","client/client.456e89d0.js","client/about.11e7daaf.js","client/intro.194f5361.js","client/input.49dec9a3.js","client/index.4ffa785e.js","client/media.2159e2ce.js","client/field.57d17b31.js","client/tiles.22a517f5.js","client/[slug].1981a330.js","client/index.5f86f78e.js","client/hero.717fd519.js","client/table.05dc4e09.js","client/tabs.a463e170.js","client/chunk.24d5f538.js"].concat(["service-worker-index.html","favicon.ico","favicon.png","global.css","great-success.png","logo-192.png","logo-512.png","manifest.json","svelma-logo-ico.png","svelma-logo.png","svelma-logo.svg"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1588830855692").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1588830855692"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const c=new URL(e.request.url);c.protocol.startsWith("http")&&(c.hostname===self.location.hostname&&c.port!==self.location.port||(c.host===self.location.host&&t.has(c.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1588830855692").then(async t=>{try{const c=await fetch(e.request);return t.put(e.request,c.clone()),c}catch(c){const n=await t.match(e.request);if(n)return n;throw c}}))))})}();
